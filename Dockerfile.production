# LeadHub Production Final - Porta 80
FROM node:18-alpine

# Install system dependencies
RUN apk add --no-cache curl dumb-init

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install --legacy-peer-deps && npm cache clean --force

# Copy source code
COPY . .

# Try to build (fallback to source if fails)
RUN npm run build || echo "Build failed, using source files"

# Create a simple start script
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'export NODE_ENV=production' >> /app/start.sh && \
    echo 'export PORT=80' >> /app/start.sh && \
    echo 'echo "ðŸš€ Starting LeadHub on port 80..."' >> /app/start.sh && \
    echo 'if [ -f "dist/server/production.mjs" ]; then' >> /app/start.sh && \
    echo '  echo "âœ… Using built server"' >> /app/start.sh && \
    echo '  exec node dist/server/production.mjs' >> /app/start.sh && \
    echo 'else' >> /app/start.sh && \
    echo '  echo "âœ… Using TypeScript source"' >> /app/start.sh && \
    echo '  exec npx tsx server/production.ts' >> /app/start.sh && \
    echo 'fi' >> /app/start.sh && \
    chmod +x /app/start.sh

# Create non-root user
RUN adduser -D -s /bin/sh appuser && \
    chown -R appuser:appuser /app

USER appuser

# Environment
ENV NODE_ENV=production
ENV PORT=80

EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:80/api/health || exit 1

# Start with robust script
ENTRYPOINT ["dumb-init", "--"]
CMD ["/app/start.sh"]
